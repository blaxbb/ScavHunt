<div class="modal fade" id="@Id" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="@(FullScreen ? "modal-dialog modal-fullscreen" : "modal-dialog modal-dialog-centered modal-xl")">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">@Title</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="@CloseText"></button>
            </div>
            <div class="modal-body d-flex flex-column">
                @ChildContent
            </div>
            @if (CloseText != null || ConfirmText != null)
            {
                <div class="modal-footer flex-column align-items-end">
                    @if (CloseText != null || ConfirmText != null)
                    {
                        @if (FooterText != null)
                        {
                            <div class="row">
                                <h5>@FooterText</h5>
                            </div>
                        }
                        <div class="d-flex flex-row">
                            @if (CloseText != null)
                            {
                                <button type="button" class="btn btn-secondary mx-3" data-bs-dismiss="modal">@CloseText</button>
                            }
                            @if (ConfirmText != null)
                            {
                                <button type="button" class="btn btn-primary mx-3" data-bs-dismiss="modal" @onclick="OnConfirmed">@ConfirmText</button>
                            }
                        </div>
                    }
                </div>
            }
        </div>
    </div>
</div>


@code {
    [Parameter]
    public string Id { get; set; }
    [Parameter]
    public string Title { get; set; }
    [Parameter]
    public string? CloseText { get; set; }
    [Parameter]
    public string? ConfirmText { get; set; }
    [Parameter]
    public string? FooterText { get; set; }
    [Parameter] 
    public bool FullScreen { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter]
    public EventCallback Confirmed { get; set; }

    async Task OnConfirmed()
    {
        await Confirmed.InvokeAsync();
    }
}
