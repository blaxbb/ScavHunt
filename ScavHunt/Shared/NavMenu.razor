@using ScavHunt.Data.Models
@inject PlayerService players

<div id="nav">
    <nav class="navbar navbar-dark">
            <a class="navbar-brand mr-auto" href="#">
                <img src="/assets/logo.png" width="30" height="30" class="d-inline-block me-3" alt="">
                <span>
                Scavenger Hunt - SIGGRAPH 2023
                </span>
            </a>
        <button type="button" class="btn btn-interactable" data-bs-toggle="collapse" data-bs-target="#navCollapse" aria-controls="navCollapse" aria-expanded="false" aria-label="Toggle navigation">
            <span class="oi oi-menu"></span>
        </button>
    </nav>

    <div class="collapse" id="navCollapse">
        <nav class="flex-column">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Home
                </NavLink>
            </div>

            <AuthorizeView>
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="player" Match="NavLinkMatch.All">
                            <span class="oi oi-person" aria-hidden="true"></span> Profile
                        </NavLink>
                    </div>
                </Authorized>
                <NotAuthorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="/Identity/Account/Login" Match="NavLinkMatch.All">
                            <span class="oi oi-account-login" aria-hidden="true"></span> Sign In
                        </NavLink>
                    </div>
                </NotAuthorized>
            </AuthorizeView>

            <AuthorizeView Roles="admin">
                <Authorized>
                    <div class="nav-item px-3">
                        <NavLink class="nav-link" href="admin">
                            <span class="oi oi-list-rich" aria-hidden="true"></span> Admin
                        </NavLink>
                    </div>
                </Authorized>
            </AuthorizeView>
        </nav>
    </div>
</div>

@code {
    Player? loggedIn { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender)
        {
            return;
        }
        loggedIn = await players.GetCurrent();
        StateHasChanged();
    }
}
