@using ScavHunt.Data.Models
@using System.Text.RegularExpressions
@inject NavigationManager nav
@inject QuestionService questions;

<div class="container">
    <div class="card row mb-3" id="hintCard">
        <div class="card-header">
            Activate a Question
        </div>
        <div class="card-body">
            <form class="row g-3" @onsubmit="async () => await SubmitQuestionCode(ManualQuestionCode)">
                <div class="col-auto">
                    <button type="button" class="btn btn-lg btn-primary"><span class="oi oi-camera-slr"></span></button>
                </div>
                <div class="col">
                    <input type="text" class="form-control form-control-lg" placeholder="Enter question code" @bind-value="@ManualQuestionCode"/>
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-lg btn-primary"><span class="oi oi-media-play"></span></button>
                </div>
                <input type="submit" hidden />
            </form>
        </div>
    </div>
    <div class="card row mb-3" id="hintCard">
        <div class="card-header">
            <h3 class="text-center">Active Now</h3>
        </div>
        <div class="card-body">
            @for(int i = 0; i < Hints.Count; i++)
            {
                var hint = Hints[i];
                <button type="button" class="alert alert-primary w-100" data-bs-toggle="collapse" data-bs-target="#collapseExample-@i" aria-expanded="false" aria-controls="collapseExample-@i" role="alert">
                    <div>@hint <span class="ms-3 oi oi-plus"></span></div>
                    <div class="collapse mt-3" id="collapseExample-@i">
                        <div class="card card-body bg-transparent">
                            This is where more specific hint text will go.  This is where more specific hint text will go.  This is where more specific hint text will go.  This is where more specific hint text will go.  This is where more specific hint text will go.  This is where more specific hint text will go.  
                        </div>
                    </div>
                </button>
            }
        </div>
    </div>
    <div class="card row mb-3" id="pointsCard">
        <div class="card-header">
            <h3 class="text-center">You have @player.PointTransactions.Sum(p => p.Value) points</h3>
        </div>
        <div class="card-body">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <td>Question</td>
                        <td>Value</td>
                        <td>Timestamp</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var transaction in player.PointTransactions.OrderByDescending(p => p.Timestamp))
                    {
                        <tr>
                            <td>@(transaction.Source == PointTransaction.PointSource.Question ? (transaction.Question?.ShortCode ?? "") : transaction.Source)</td>
                            <td>@transaction.Value</td>
                            <td>@transaction.Timestamp</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    <div class="card row mb-3" id="leaderboardCard">
        <div class="card-header">
            <h3 class="text-center">You are in 25th place</h3>
        </div>
        <div class="card-body">
            <table class="table table-striped table-hover">
                <tbody>
                    <tr>
                        <td>1</td>
                        <td>LEADER NAME</td>
                        <td>85</td>
                    </tr>
                    <tr>
                        <td class="text-center" colspan="3">...</td>
                    </tr>
                    <tr>
                        <td>23</td>
                        <td>Other Name</td>
                        <td>42</td>
                    </tr>
                    <tr>
                        <td>24</td>
                        <td>Other Name</td>
                        <td>40</td>
                    </tr>
                    <tr>
                        <td>25</td>
                        <td>@player.BadgeNumber</td>
                        <td>39</td>
                    </tr>
                    <tr>
                        <td>26</td>
                        <td>Other Name</td>
                        <td>35</td>
                    </tr>
                    <tr>
                        <td>27</td>
                        <td>Other Name</td>
                        <td>35</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Player? player { get; set; }

    string ManualQuestionCode { get; set; }

    public List<string> Hints { get; set; } = new() { "Hint 1", "Hint 2", "Hint 3", "Hint 4", "Hint 5" };

    async Task SubmitQuestionCode(string code)
    {
        var digits = Question.SHORT_CODE_LENGTH;
        var regex = $"^\\d{{{digits}}}$";
        if(Regex.IsMatch(code, regex))
        {
            var question = await questions.GetFromShortCode(code);
            if(question != default)
            {
                nav.NavigateTo($"/q/{code}");
            }
            else
            {
                
            }
        }
    }
}