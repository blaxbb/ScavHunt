<nav class="" aria-label="Page navigation example">
    <ul class="pagination justify-content-evenly">
        
        <li class="page-item @(Page == 0 ? "disabled" : "")"><button class="btn btn-lg btn-interactable" @onclick="async (_) => SetPage(0)">First</button></li>
        @if(Page == LastPage && Page - 2 >= 0)
        {
            <li class="page-item"><button class="btn btn-lg btn-interactable" @onclick="async (_) => SetPage(Page - 2)">@(Page - 2 + 1)</button></li>
        }
        @if (Page != 0)
        {
            <li class="page-item"><button class="btn btn-lg btn-interactable" @onclick="async (_) => SetPage(Page - 1)">@(Page - 1 + 1)</button></li>
        }
        <li class="page-item active"><button class="btn btn-lg btn-interactable">@(Page + 1)</button></li>
        @if (Page != LastPage)
        {
            <li class="page-item"><button class="btn btn-lg btn-interactable" @onclick="async (_) => SetPage(Page + 1)">@(Page + 1 + 1)</button></li>
        }
        @if(Page == 0 && Page + 2 < LastPage)
        {
            <li class="page-item"><button class="btn btn-lg btn-interactable" @onclick="async (_) => SetPage(Page + 2)">@(Page + 2 + 1)</button></li>
        }
        <li class="page-item @(Page == LastPage ? "disabled" : "")"><button class="btn btn-lg btn-interactable" @onclick="async (_) => SetPage(LastPage)">Last</button></li>
    </ul>
</nav>

@code {
    [Parameter]
    public int Page { get; set; }
    [Parameter]
    public int ItemsPerPage { get; set; }
    [Parameter]
    public int TotalItems { get; set; }

    [Parameter]
    public EventCallback<int> PageChanged{ get; set; }

    int LastPage => TotalItems == 0 ? 0 : TotalItems / ItemsPerPage - (TotalItems % ItemsPerPage == 0 ? 1 : 0);

    async void SetPage(int page)
    {
        Page = page;
        await PageChanged.InvokeAsync(page);
    }
}
