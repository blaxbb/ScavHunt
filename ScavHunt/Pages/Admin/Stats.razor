@attribute [Authorize]
@page "/admin/stats"
@using static ScavHunt.Data.Services.StatsAdminService;
@inject StatsAdminService stats;


<div class="container">
    @if (all != null)
    {
        <table class="table table-striped table-responsive table-hover">
            <thead>
                <tr>
                    <td>Title</td>
                    <td>Players</td>
                    <td>Total Answers</td>
                    <td>Response 1</td>
                    <td>Response 2</td>
                    <td>Response 3</td>
                    <td>Response 4</td>
                </tr>
            </thead>
            <tbody>
                @foreach (var stats in all)
                {
                    <tr>
                        <td>@stats.question.ShortCode - @stats.question.Title</td>
                        <td>@stats.totalPlayers</td>
                        <td>@stats.responseCounts.Values.Sum()</td>
                        <td>@getResponseIndexValue(stats, 0)</td>
                        <td>@getResponseIndexValue(stats, 1)</td>
                        <td>@getResponseIndexValue(stats, 2)</td>
                        <td>@getResponseIndexValue(stats, 3)</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    List<QuestionStats> all { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var result = await stats.GetStats();

        all = result.OrderBy(s => s.question.Id).ToList();
    }

    string? getResponseIndexValue(QuestionStats stats, int index)
    {
        if(stats.responseCounts.ContainsKey(index))
        {
            return stats.responseCounts[index].ToString();
        }

        if(stats.question.Answers.Count > index)
        {
            return "0";
        }

        return default;
    }
}
